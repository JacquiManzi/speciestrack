from flask import render_template
from dotenv import load_dotenv
from speciestrack.utils.date_utils import get_date_json

import requests
import os

load_dotenv()


def get_gbif_data():
    """
    Fetch occurrence data from GBIF API using provided parameters and authentication.
    """
    url = os.getenv("GBIF_API_URL")
    username = os.getenv("GBIF_USERNAME")
    password = os.getenv("GBIF_PASSWORD")
    date_info = get_date_json()

    params = {
        "dataset_key": os.getenv("DATASET_KEY"),
        "has_coordinate": "true",
        "has_geospatial_issue": "false",
        "state_province": "California",
        "advanced": "1",
        "start_day_of_year": date_info["day"],
        "month": date_info["month"],
        "year": date_info["year"],
        "geometry": "POLYGON ((-122.2811178 37.9187401, -122.2813702 37.919151, -122.2820573 37.9197042, -122.2824237 37.920121, -122.2827134 37.9199286, -122.2829843 37.920196, -122.2830302 37.920335, -122.2834115 37.9208095, -122.2848131 37.9221168, -122.2850735 37.9223598, -122.2859827 37.9232078, -122.2862735 37.923632, -122.2865628 37.9240541, -122.2867002 37.9242546, -122.2874551 37.9244923, -122.2880286 37.9246729, -122.2883484 37.9251136, -122.2888232 37.9252602, -122.2893427 37.9254207, -122.289646 37.9253071, -122.2902554 37.9258587, -122.2917992 37.9272561, -122.291271 37.9276309, -122.2918601 37.9283919, -122.2915723 37.928593, -122.2912067 37.9288484, -122.2907488 37.9291683, -122.2906396 37.9292446, -122.2909049 37.9294843, -122.2922383 37.930689, -122.2925884 37.9308065, -122.2937623 37.9312006, -122.2943537 37.9313991, -122.2946208 37.9314887, -122.2948912 37.9315795, -122.2952155 37.9313797, -122.2952955 37.9314737, -122.2957088 37.9320842, -122.295928 37.9324088, -122.297136 37.93332, -122.2976695 37.9338346, -122.2997173 37.9358099, -122.2999755 37.9358482, -122.3001195 37.9359764, -122.3000977 37.9361687, -122.3004205 37.9364623, -122.3014187 37.9373703, -122.3015708 37.9375086, -122.3032325 37.9390202, -122.3031891 37.9391234, -122.3054786 37.9409951, -122.3076021 37.942731, -122.3100978 37.9450292, -122.3106944 37.9445687, -122.3115501 37.9439083, -122.3116352 37.9439871, -122.3116807 37.9440313, -122.3116121 37.9440824, -122.3113574 37.944303, -122.3121721 37.944916, -122.3113092 37.9455964, -122.310152 37.945672, -122.3072134 37.9453951, -122.3083436 37.9467052, -122.3087044 37.9471974, -122.3088731 37.9474276, -122.3089755 37.9474612, -122.3091024 37.9475029, -122.3091594 37.94765, -122.3091886 37.9477255, -122.3096017 37.9481163, -122.3107458 37.9485732, -122.31106 37.9486987, -122.3113569 37.9488173, -122.3113537 37.9486034, -122.311352 37.948485, -122.3113455 37.9480487, -122.3113314 37.947098, -122.3114127 37.947041, -122.3118648 37.9474556, -122.3122407 37.9472324, -122.312327 37.9472474, -122.3123611 37.9468097, -122.31248 37.946824, -122.3124323 37.9471345, -122.3124145 37.94725, -122.3126226 37.9474335, -122.3125073 37.9477109, -122.3120107 37.9476934, -122.3121243 37.9494655, -122.3114299 37.9497074, -122.3113912 37.9513222, -122.311726 37.9515958, -122.3134596 37.9522235, -122.3144084 37.9525671, -122.314595 37.9522568, -122.3150555 37.9520621, -122.3157656 37.9519246, -122.3162109 37.9517006, -122.3162319 37.9515391, -122.3162978 37.9510307, -122.316301 37.950974, -122.3164257 37.9509863, -122.316615 37.951005, -122.316615 37.951005, -122.3166911 37.9510206, -122.3166911 37.9510206, -122.3167254 37.9510275, -122.3168139 37.9510455, -122.317032 37.95109, -122.317336 37.951187, -122.317512 37.951222, -122.318 37.951238, -122.318197 37.951271, -122.318662 37.951429, -122.31905 37.951476, -122.319189 37.951514, -122.3194137 37.9516293, -122.3195302 37.9516878, -122.3196084 37.9517121, -122.3198114 37.9517392, -122.3201769 37.9517651, -122.320532 37.9518202, -122.3207585 37.9518071, -122.3209877 37.9517395, -122.3211584 37.9516848, -122.3215193 37.9515607, -122.3220996 37.9513749, -122.3221226 37.9513673, -122.322261 37.9513066, -122.322322 37.951334, -122.3221224 37.9518747, -122.3220776 37.9519961, -122.322593 37.9520224, -122.3232229 37.9524504, -122.3232284 37.9526666, -122.3234922 37.9526567, -122.3239368 37.9531153, -122.3240374 37.9530756, -122.3242433 37.9532873, -122.3244358 37.9534852, -122.3244023 37.953658, -122.324404 37.953845, -122.3240464 37.9539259, -122.3238334 37.9540983, -122.3238188 37.9541055, -122.3227425 37.9541087, -122.3221569 37.9541104, -122.3207552 37.9541145, -122.3203188 37.9541157, -122.3189284 37.9541198, -122.3187507 37.9540372, -122.3186836 37.9541255, -122.3184595 37.9544202, -122.3185775 37.9545275, -122.3186847 37.9547737, -122.3187275 37.954872, -122.318355 37.9550113, -122.318053 37.9549808, -122.3180654 37.9550509, -122.318172 37.9551233, -122.318272 37.9551171, -122.3183407 37.9552548, -122.3184789 37.9560503, -122.3184999 37.9561591, -122.318518 37.9562619, -122.3183116 37.9563038, -122.3163588 37.9567066, -122.316445 37.9570226, -122.3166153 37.9575694, -122.3165949 37.9581041, -122.3165813 37.9584606, -122.3154681 37.9585196, -122.3155273 37.9590252, -122.315571 37.959399, -122.3151668 37.9594651, -122.3146574 37.9595484, -122.3135598 37.9597279, -122.3126239 37.959881, -122.312306 37.959933, -122.310553 37.959921, -122.310547 37.960035, -122.309577 37.960034, -122.30956 37.959923, -122.3093907 37.9599232, -122.3090465 37.9599238, -122.308879 37.959924, -122.3088851 37.9600166, -122.3082718 37.960013, -122.3079408 37.9600025, -122.308068 37.9572682, -122.3080868 37.9568632, -122.3081317 37.9558968, -122.3081585 37.955322, -122.3081799 37.95486, -122.3082817 37.9526715, -122.3081066 37.9526718, -122.3040687 37.9526513, -122.3034829 37.9526483, -122.3024016 37.9526428, -122.3017543 37.9526395, -122.3020292 37.9548731, -122.3018892 37.9548776, -122.3010718 37.9549037, -122.3000139 37.9549375, -122.299685 37.954948, -122.299758 37.954444, -122.2995602 37.9542429, -122.2991427 37.9538182, -122.298991 37.953664, -122.2987 37.9538277, -122.2983411 37.9540245, -122.2981004 37.954158, -122.297584 37.9544445, -122.29613 37.955251, -122.29822 37.95575, -122.297833 37.9563132, -122.2976538 37.9565739, -122.297504 37.956792, -122.2968985 37.9566815, -122.2964605 37.9566015, -122.2962028 37.9565529, -122.29505 37.956344, -122.294939 37.956073, -122.2944983 37.9559949, -122.293257 37.955775, -122.292544 37.9546785, -122.2924123 37.9544761, -122.2923509 37.9543816, -122.292292 37.954291, -122.290776 37.9549433, -122.290647 37.954966, -122.2903515 37.9548134, -122.290132 37.9547001, -122.2895067 37.9543772, -122.2888342 37.95403, -122.288563 37.95389, -122.2880917 37.953789, -122.287177 37.953593, -122.2868622 37.95387, -122.2859795 37.9546467, -122.285753 37.954846, -122.2854072 37.9546576, -122.2851797 37.9545336, -122.2846912 37.9542675, -122.284349 37.954081, -122.2847487 37.9536726, -122.2848297 37.9535898, -122.2849661 37.9534505, -122.285355 37.9530531, -122.286419 37.951966, -122.2878456 37.9528481, -122.2885736 37.9532983, -122.289157 37.953659, -122.290278 37.953035, -122.289691 37.952509, -122.289418 37.952561, -122.289284 37.952236, -122.288718 37.951962, -122.287967 37.951867, -122.28756 37.951667, -122.2870125 37.9512151, -122.286701 37.950958, -122.285588 37.950717, -122.2851039 37.9503149, -122.284933 37.950173, -122.2849347 37.9501006, -122.284973 37.948424, -122.284023 37.947842, -122.283914 37.9473, -122.282297 37.947381, -122.282233 37.947002, -122.281777 37.947017, -122.280954 37.9461813, -122.2798189 37.9450288, -122.27843 37.9436184, -122.2779599 37.943141, -122.2776509 37.9428273, -122.276722 37.9419163, -122.276526 37.941685, -122.2749151 37.9406368, -122.2746976 37.9404953, -122.2744256 37.9402336, -122.2730988 37.939491, -122.2724192 37.9387205, -122.2719817 37.9382245, -122.2715259 37.9378122, -122.2710087 37.9373443, -122.2707257 37.9370883, -122.2706279 37.9368, -122.2704183 37.9361436, -122.2697194 37.9357811, -122.2695693 37.9357033, -122.2658969 37.9339197, -122.265291 37.9329104, -122.265165 37.9325027, -122.2649426 37.9317828, -122.2648405 37.9315561, -122.2646525 37.9311388, -122.2645231 37.9306395, -122.264264 37.92964, -122.2639572 37.9284102, -122.263488 37.927526, -122.2630052 37.9268739, -122.2626472 37.9262308, -122.2621038 37.924883, -122.261997 37.924164, -122.2623621 37.9240225, -122.262637 37.923916, -122.2626098 37.9237801, -122.262572 37.923591, -122.2629638 37.9227731, -122.2632043 37.9215352, -122.2632043 37.9215352, -122.2676507 37.9214296, -122.2681887 37.9214214, -122.2688096 37.921412, -122.2689922 37.9214092, -122.2706067 37.9213847, -122.2706725 37.923921, -122.2717623 37.9233803, -122.2733242 37.9226058, -122.2811178 37.9187401), (-122.3132118 37.9578349, -122.3132176 37.9575795, -122.3132815 37.9571428, -122.3133658 37.9570144, -122.3132304 37.9569601, -122.3130641 37.9568966, -122.3129407 37.9568628, -122.3127918 37.9568368, -122.3126523 37.9568199, -122.3125075 37.9568072, -122.3123841 37.9567987, -122.3122876 37.9567733, -122.3121803 37.956748, -122.3120462 37.9566676, -122.3119603 37.9565999, -122.3118906 37.9565196, -122.3118034 37.9564187, -122.3117404 37.9563504, -122.3115732 37.9561352, -122.3103861 37.9563649, -122.3105609 37.9568587, -122.3109979 37.9572033, -122.3114275 37.957634, -122.3119155 37.957588, -122.3121777 37.9578005, -122.3127157 37.9578184, -122.3132118 37.9578349))",
    }

    response = requests.get(url, params=params, auth=(username, password))
    if response.status_code == 200:
        return response.json()
    else:
        response.raise_for_status()


def show_map():
    """
    Controller for the map page.
    Renders the map view with species tracking data.
    """

    data = get_gbif_data()
    species_data = []
    for item in data.get("results", []):
        name = item.get("scientificName")
        if name:
            species_data.append([{"name": name, "type": "", "count": 1}])

    return render_template("map.html", species=species_data, title="Species Map")
